apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-android-extensions"
apply plugin: "kotlin-kapt"

def keystorePropertiesFile = rootProject.file("keystore.properties")

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion "29.0.2"

    defaultConfig {
        applicationId "com.renderforest.weatherapp"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            if (keystorePropertiesFile.exists()) {
                def keystoreProperties = new Properties()
                keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
                keyAlias keystoreProperties["keyAlias"]
                keyPassword keystoreProperties["keyPassword"]
                storeFile file(keystoreProperties["storeFile"])
                storePassword keystoreProperties["storePassword"]
            }
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            shrinkResources false
            debuggable false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
            ext.betaDistributionGroupAliases = "Internal"
        }

        debug {
            minifyEnabled false
            debuggable true
            signingConfig signingConfigs.release
            ext.betaDistributionGroupAliases = "Internal"
        }
    }

    flavorDimensions "version"

    productFlavors {
        prod {
            dimension "version"
            buildConfigField("String", "BASE_URL", "\"https://api.openweathermap.org/data/\"")
            buildConfigField("String", "ICON_URL", "\"http://openweathermap.org/img/wn/%s@2x.png\"")
            buildConfigField("String", "APP_ID", "\"f4a548dc1e73dab742f123c11b488bae\"")
        }

        dev {
            dimension "version"
            versionNameSuffix "-dev"
            buildConfigField("String", "BASE_URL", "\"https://api.openweathermap.org/data/\"")
            buildConfigField("String", "ICON_URL", "\"http://openweathermap.org/img/wn/%s@2x.png\"")
            buildConfigField("String", "APP_ID", "\"f4a548dc1e73dab742f123c11b488bae\"")
        }
    }

    android.variantFilter { variant ->
        def type = variant.getFlavors().get(0).name
        if (type.equals("dev") && !variant.buildType.isDebuggable()) {
            variant.setIgnore(true)
        } else if (type.equals("prod") && !variant.buildType.isMinifyEnabled()) {
            variant.setIgnore(true)
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "Weather_${variant.versionName}.apk"
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:1.1.0"
    implementation "androidx.core:core-ktx:1.2.0"
    implementation "androidx.constraintlayout:constraintlayout:1.1.3"

    //LifeCycle components
    implementation "android.arch.lifecycle:extensions:1.1.1"

    //DAGGER
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

    // RETROFIT
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.4.0"
    implementation "com.squareup.okhttp3:logging-interceptor:4.2.0"

    //RXJAVA
    implementation "io.reactivex.rxjava2:rxjava:2.2.9"
    implementation "io.reactivex.rxjava2:rxandroid:2.1.0"

    //NAVIGATION COMPONENTS
    implementation "android.arch.navigation:navigation-fragment:$navVersion"
    implementation "android.arch.navigation:navigation-ui:$navVersion"

    //ROOM
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    //RxJava support for Room
    implementation "androidx.room:room-rxjava2:$roomVersion"

    //EVENTBUSS
    implementation 'org.greenrobot:eventbus:3.1.1'

    //FOR REQUESTING PERMISSIONS
    implementation 'pub.devrel:easypermissions:3.0.0'

    //FOR REQUESTING LOCATION
    implementation 'com.google.android.gms:play-services-location:17.0.0'
    implementation 'io.nlopez.smartlocation:library:3.3.3'

    //IMAGE LOADER
    implementation 'com.github.bumptech.glide:glide:4.11.0'

    testImplementation "junit:junit:4.12"
    androidTestImplementation "androidx.test.ext:junit:1.1.1"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.2.0"
}
